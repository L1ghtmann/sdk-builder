# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: SDKs

on:
  push:
    branches: [ main ]

jobs:
  create:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        TAG="2.0.0"
        gh release create "$TAG" --draft --title "Draft Release"

  build:
    needs: create
    strategy:
      matrix:
        version:
          - "16.0"
          - "15.5"
          - "15.0"
          - "14.5"
          - "14.0"
          - "13.5"
          - "13.0"

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install partialzip
      run: |
        cargo install partialzip

    - name: Install apfs-fuse
      run: |
        sudo apt install -y libfuse3-dev
        git clone --recursive https://github.com/sgan81/apfs-fuse
        cd apfs-fuse
        mkdir build && cd build
        cmake ../
        make -j$(nproc --all) install

    - name: Setup python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install progressbar2 dyldextractor poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        git clone https://github.com/cxnder/ktool.git && cd ktool && chmod +x dev_install.sh && ./dev_install.sh

    - name: Build SDK
      run: |
        python3 sdkgen.py ${{ matrix.version }}

    - name: Prep and upload SDK
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        mv ${{ matrix.version }}.extracted iPhoneOS${{ matrix.version }}.sdk
        zip -9 -r iPhoneOS${{ matrix.version }}.sdk.zip iPhoneOS${{ matrix.version }}.sdk
        gh release upload "$TAG" iPhoneOS${{ matrix.version }}.sdk.zip
